/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package letv.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import letv.user.Login;

import letv.struts.form.UserloginForm;

/**
 * MyEclipse Struts Creation date: 05-21-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/userlogin" name="userloginForm"
 *                input="/form/usrlogin.jsp" scope="request" validate="true"
 * @struts.action-forward name="login_error" path="/form/usrlogin.jsp"
 * @struts.action-forward name="longin_ok" path="/admin/index.jsp"
 */
public class UserloginAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserloginForm userLoginForm = (UserloginForm) form;// TODO
															// Auto-generated
															// method stub
		ActionMessages ams = new ActionMessages();
		String user_name = userLoginForm.getUser_name();
		String user_pswd = userLoginForm.getUser_password();

		String lgip = request.getRemoteAddr();

		if (user_name == null || user_name.trim().equals("")) {

			ams.add("user_name_error", new ActionMessage(
					"everything.log.uname.empty"));
			saveErrors(request, ams);

			return mapping.findForward("login_error");
		}
		if (user_pswd == null || user_pswd.trim().equals("")) {

			ams.add("user_password_error", new ActionMessage(
					"everything.log.pwd.empty"));
			saveErrors(request, ams);
			return mapping.findForward("login_error");
		}
		Login lg = new Login();

		if (!lg.verify(user_name, user_pswd)) {
			ams
					.add("user_log_error", new ActionMessage(
							"everything.log.error"));
			saveErrors(request, ams);
			return mapping.findForward("login_error");
		} else {
			request.getSession().setAttribute("adm_log_usrname", user_name);
			request.getSession().setAttribute("adm_log_session", "yes");
			request.getSession().setAttribute("adm_log_id", "001");
			request.getSession().setAttribute("adm_log_date", "0");
			request.getSession().setAttribute("adm_log_ip", "127.0.0.1");
			request.getSession().setAttribute("adm_log_ip", "127.0.0.1");
			request.getSession().setAttribute("adm_log_name", "letv editor");
			request.getSession().setMaxInactiveInterval(60 * 60);
			return mapping.findForward("admin_log");
		}
	}
}