Index: crawl_doc.thrift
===================================================================
--- crawl_doc.thrift	(revision 122471)
+++ crawl_doc.thrift	(working copy)
@@ -359,3 +359,13 @@
   2:  optional list<string>                    region_blocked;            //Youtube在用,限制地区列表，注(NONE为不生效，[]为全允许)
 }
 
+struct CategoryProportion {
+  1:  string                    category;
+  2:  double                    proportion;
+}
+
+struct LanguageProportion {
+  1:  LanguageType              language_type;
+  2:  double                    proportion;
+}
+
Index: video_media.thrift
===================================================================
--- video_media.thrift	(revision 122471)
+++ video_media.thrift	(working copy)
@@ -48,21 +48,23 @@
 
 //自频道用户结构
 struct OriginalUser {
-  1:  optional string                         user_name;                      //用户名
-  2:  optional string                         url;                            //用户频道url
-  3:  optional string                         portrait_url;                   //用户头像
-  4:  optional i32                            video_num;                      //视频数量
-  5:  optional i64                            play_num;                       //视频播放数
-  6:  optional i64                            fans_num;                       //粉丝数
-  7:  optional string                         channel_desc;                   //频道介绍
-  8:  optional i64                            update_time;                    //更新时间
-  9:  optional string                         channel_id;                     //频道ID
-  10: optional string                         channel_title;                  //标题
-  11: optional string                         thumbnails;                     //缩略图(弃用)
-  12: optional i64                            publish_time;                   //发布时间
-  13: optional i32                            comment_num;                    //评论数
-  14: optional list<crawl_doc.Thumbnail>      thumbnail_list;                 //缩略图
-  15: optional string                         country;                        //国家
+  1:  optional string                                    user_name;                      //用户名
+  2:  optional string                                    url;                            //用户频道url
+  3:  optional string                                    portrait_url;                   //用户头像
+  4:  optional i32                                       video_num;                      //视频数量
+  5:  optional i64                                       play_num;                       //视频播放数
+  6:  optional i64                                       fans_num;                       //粉丝数
+  7:  optional string                                    channel_desc;                   //频道介绍
+  8:  optional i64                                       update_time;                    //更新时间
+  9:  optional string                                    channel_id;                     //频道ID
+  10: optional string                                    channel_title;                  //标题
+  11: optional string                                    thumbnails;                     //缩略图(弃用)
+  12: optional i64                                       publish_time;                   //发布时间
+  13: optional i32                                       comment_num;                    //评论数
+  14: optional list<crawl_doc.Thumbnail>                 thumbnail_list;                 //缩略图
+  15: optional string                                    country;                        //国家
+  16: optional list<crawl_doc.CategoryProportion>        category_proportion_list;       //频道大部分视频的category所占百分比
+  17: optional list<crawl_doc.LanguageProportion>        language_proportion_list;       //频道大部分视频的语言类型所占百分比
 }
 
 //视频结构
Index: video/ttypes.py
===================================================================
--- video/ttypes.py	(revision 122471)
+++ video/ttypes.py	(working copy)
@@ -441,6 +441,8 @@
    - comment_num
    - thumbnail_list
    - country
+   - category_proportion_list
+   - language_proportion_list
   """
 
   thrift_spec = (
@@ -460,9 +462,11 @@
     (13, TType.I32, 'comment_num', None, None, ), # 13
     (14, TType.LIST, 'thumbnail_list', (TType.STRUCT,(le_crawler.proto.crawl.ttypes.Thumbnail, le_crawler.proto.crawl.ttypes.Thumbnail.thrift_spec)), None, ), # 14
     (15, TType.STRING, 'country', None, None, ), # 15
+    (16, TType.LIST, 'category_proportion_list', (TType.STRUCT,(le_crawler.proto.crawl.ttypes.CategoryProportion, le_crawler.proto.crawl.ttypes.CategoryProportion.thrift_spec)), None, ), # 16
+    (17, TType.LIST, 'language_proportion_list', (TType.STRUCT,(le_crawler.proto.crawl.ttypes.LanguageProportion, le_crawler.proto.crawl.ttypes.LanguageProportion.thrift_spec)), None, ), # 17
   )
 
-  def __init__(self, user_name=None, url=None, portrait_url=None, video_num=None, play_num=None, fans_num=None, channel_desc=None, update_time=None, channel_id=None, channel_title=None, thumbnails=None, publish_time=None, comment_num=None, thumbnail_list=None, country=None,):
+  def __init__(self, user_name=None, url=None, portrait_url=None, video_num=None, play_num=None, fans_num=None, channel_desc=None, update_time=None, channel_id=None, channel_title=None, thumbnails=None, publish_time=None, comment_num=None, thumbnail_list=None, country=None, category_proportion_list=None, language_proportion_list=None,):
     self.user_name = user_name
     self.url = url
     self.portrait_url = portrait_url
@@ -478,6 +482,8 @@
     self.comment_num = comment_num
     self.thumbnail_list = thumbnail_list
     self.country = country
+    self.category_proportion_list = category_proportion_list
+    self.language_proportion_list = language_proportion_list
 
   def read(self, iprot):
     if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
@@ -569,6 +575,28 @@
           self.country = iprot.readString();
         else:
           iprot.skip(ftype)
+      elif fid == 16:
+        if ftype == TType.LIST:
+          self.category_proportion_list = []
+          (_etype18, _size15) = iprot.readListBegin()
+          for _i19 in xrange(_size15):
+            _elem20 = le_crawler.proto.crawl.ttypes.CategoryProportion()
+            _elem20.read(iprot)
+            self.category_proportion_list.append(_elem20)
+          iprot.readListEnd()
+        else:
+          iprot.skip(ftype)
+      elif fid == 17:
+        if ftype == TType.LIST:
+          self.language_proportion_list = []
+          (_etype24, _size21) = iprot.readListBegin()
+          for _i25 in xrange(_size21):
+            _elem26 = le_crawler.proto.crawl.ttypes.LanguageProportion()
+            _elem26.read(iprot)
+            self.language_proportion_list.append(_elem26)
+          iprot.readListEnd()
+        else:
+          iprot.skip(ftype)
       else:
         iprot.skip(ftype)
       iprot.readFieldEnd()
@@ -634,14 +662,28 @@
     if self.thumbnail_list is not None:
       oprot.writeFieldBegin('thumbnail_list', TType.LIST, 14)
       oprot.writeListBegin(TType.STRUCT, len(self.thumbnail_list))
-      for iter15 in self.thumbnail_list:
-        iter15.write(oprot)
+      for iter27 in self.thumbnail_list:
+        iter27.write(oprot)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.country is not None:
       oprot.writeFieldBegin('country', TType.STRING, 15)
       oprot.writeString(self.country)
       oprot.writeFieldEnd()
+    if self.category_proportion_list is not None:
+      oprot.writeFieldBegin('category_proportion_list', TType.LIST, 16)
+      oprot.writeListBegin(TType.STRUCT, len(self.category_proportion_list))
+      for iter28 in self.category_proportion_list:
+        iter28.write(oprot)
+      oprot.writeListEnd()
+      oprot.writeFieldEnd()
+    if self.language_proportion_list is not None:
+      oprot.writeFieldBegin('language_proportion_list', TType.LIST, 17)
+      oprot.writeListBegin(TType.STRUCT, len(self.language_proportion_list))
+      for iter29 in self.language_proportion_list:
+        iter29.write(oprot)
+      oprot.writeListEnd()
+      oprot.writeFieldEnd()
     oprot.writeFieldStop()
     oprot.writeStructEnd()
 
@@ -1267,11 +1309,11 @@
       elif fid == 61:
         if ftype == TType.MAP:
           self.extend = {}
-          (_ktype17, _vtype18, _size16 ) = iprot.readMapBegin()
-          for _i20 in xrange(_size16):
-            _key21 = iprot.readString();
-            _val22 = iprot.readString();
-            self.extend[_key21] = _val22
+          (_ktype31, _vtype32, _size30 ) = iprot.readMapBegin()
+          for _i34 in xrange(_size30):
+            _key35 = iprot.readString();
+            _val36 = iprot.readString();
+            self.extend[_key35] = _val36
           iprot.readMapEnd()
         else:
           iprot.skip(ftype)
@@ -1348,20 +1390,20 @@
       elif fid == 76:
         if ftype == TType.LIST:
           self.OBSOLETE_inlink = []
-          (_etype26, _size23) = iprot.readListBegin()
-          for _i27 in xrange(_size23):
-            _elem28 = iprot.readString();
-            self.OBSOLETE_inlink.append(_elem28)
+          (_etype40, _size37) = iprot.readListBegin()
+          for _i41 in xrange(_size37):
+            _elem42 = iprot.readString();
+            self.OBSOLETE_inlink.append(_elem42)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
       elif fid == 77:
         if ftype == TType.LIST:
           self.OBSOLETE_outlink = []
-          (_etype32, _size29) = iprot.readListBegin()
-          for _i33 in xrange(_size29):
-            _elem34 = iprot.readString();
-            self.OBSOLETE_outlink.append(_elem34)
+          (_etype46, _size43) = iprot.readListBegin()
+          for _i47 in xrange(_size43):
+            _elem48 = iprot.readString();
+            self.OBSOLETE_outlink.append(_elem48)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
@@ -1389,11 +1431,11 @@
       elif fid == 82:
         if ftype == TType.LIST:
           self.in_links = []
-          (_etype38, _size35) = iprot.readListBegin()
-          for _i39 in xrange(_size35):
-            _elem40 = le_crawler.proto.crawl.ttypes.Anchor()
-            _elem40.read(iprot)
-            self.in_links.append(_elem40)
+          (_etype52, _size49) = iprot.readListBegin()
+          for _i53 in xrange(_size49):
+            _elem54 = le_crawler.proto.crawl.ttypes.Anchor()
+            _elem54.read(iprot)
+            self.in_links.append(_elem54)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
@@ -1446,11 +1488,11 @@
       elif fid == 92:
         if ftype == TType.LIST:
           self.thumbnail_list = []
-          (_etype44, _size41) = iprot.readListBegin()
-          for _i45 in xrange(_size41):
-            _elem46 = le_crawler.proto.crawl.ttypes.Thumbnail()
-            _elem46.read(iprot)
-            self.thumbnail_list.append(_elem46)
+          (_etype58, _size55) = iprot.readListBegin()
+          for _i59 in xrange(_size55):
+            _elem60 = le_crawler.proto.crawl.ttypes.Thumbnail()
+            _elem60.read(iprot)
+            self.thumbnail_list.append(_elem60)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
@@ -1472,16 +1514,16 @@
       elif fid == 96:
         if ftype == TType.LIST:
           self.inlink_history = []
-          (_etype50, _size47) = iprot.readListBegin()
-          for _i51 in xrange(_size47):
-            _elem52 = []
-            (_etype56, _size53) = iprot.readListBegin()
-            for _i57 in xrange(_size53):
-              _elem58 = le_crawler.proto.crawl.ttypes.Anchor()
-              _elem58.read(iprot)
-              _elem52.append(_elem58)
+          (_etype64, _size61) = iprot.readListBegin()
+          for _i65 in xrange(_size61):
+            _elem66 = []
+            (_etype70, _size67) = iprot.readListBegin()
+            for _i71 in xrange(_size67):
+              _elem72 = le_crawler.proto.crawl.ttypes.Anchor()
+              _elem72.read(iprot)
+              _elem66.append(_elem72)
             iprot.readListEnd()
-            self.inlink_history.append(_elem52)
+            self.inlink_history.append(_elem66)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
@@ -1740,9 +1782,9 @@
     if self.extend is not None:
       oprot.writeFieldBegin('extend', TType.MAP, 61)
       oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.extend))
-      for kiter59,viter60 in self.extend.items():
-        oprot.writeString(kiter59)
-        oprot.writeString(viter60)
+      for kiter73,viter74 in self.extend.items():
+        oprot.writeString(kiter73)
+        oprot.writeString(viter74)
       oprot.writeMapEnd()
       oprot.writeFieldEnd()
     if self.episode is not None:
@@ -1804,15 +1846,15 @@
     if self.OBSOLETE_inlink is not None:
       oprot.writeFieldBegin('OBSOLETE_inlink', TType.LIST, 76)
       oprot.writeListBegin(TType.STRING, len(self.OBSOLETE_inlink))
-      for iter61 in self.OBSOLETE_inlink:
-        oprot.writeString(iter61)
+      for iter75 in self.OBSOLETE_inlink:
+        oprot.writeString(iter75)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.OBSOLETE_outlink is not None:
       oprot.writeFieldBegin('OBSOLETE_outlink', TType.LIST, 77)
       oprot.writeListBegin(TType.STRING, len(self.OBSOLETE_outlink))
-      for iter62 in self.OBSOLETE_outlink:
-        oprot.writeString(iter62)
+      for iter76 in self.OBSOLETE_outlink:
+        oprot.writeString(iter76)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.page_state is not None:
@@ -1834,8 +1876,8 @@
     if self.in_links is not None:
       oprot.writeFieldBegin('in_links', TType.LIST, 82)
       oprot.writeListBegin(TType.STRUCT, len(self.in_links))
-      for iter63 in self.in_links:
-        iter63.write(oprot)
+      for iter77 in self.in_links:
+        iter77.write(oprot)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.user is not None:
@@ -1877,8 +1919,8 @@
     if self.thumbnail_list is not None:
       oprot.writeFieldBegin('thumbnail_list', TType.LIST, 92)
       oprot.writeListBegin(TType.STRUCT, len(self.thumbnail_list))
-      for iter64 in self.thumbnail_list:
-        iter64.write(oprot)
+      for iter78 in self.thumbnail_list:
+        iter78.write(oprot)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.dead_link is not None:
@@ -1896,10 +1938,10 @@
     if self.inlink_history is not None:
       oprot.writeFieldBegin('inlink_history', TType.LIST, 96)
       oprot.writeListBegin(TType.LIST, len(self.inlink_history))
-      for iter65 in self.inlink_history:
-        oprot.writeListBegin(TType.STRUCT, len(iter65))
-        for iter66 in iter65:
-          iter66.write(oprot)
+      for iter79 in self.inlink_history:
+        oprot.writeListBegin(TType.STRUCT, len(iter79))
+        for iter80 in iter79:
+          iter80.write(oprot)
         oprot.writeListEnd()
       oprot.writeListEnd()
       oprot.writeFieldEnd()
@@ -2573,11 +2615,11 @@
       elif fid == 58:
         if ftype == TType.LIST:
           self.videos = []
-          (_etype70, _size67) = iprot.readListBegin()
-          for _i71 in xrange(_size67):
-            _elem72 = MediaVideoAbstract()
-            _elem72.read(iprot)
-            self.videos.append(_elem72)
+          (_etype84, _size81) = iprot.readListBegin()
+          for _i85 in xrange(_size81):
+            _elem86 = MediaVideoAbstract()
+            _elem86.read(iprot)
+            self.videos.append(_elem86)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
@@ -2594,11 +2636,11 @@
       elif fid == 61:
         if ftype == TType.MAP:
           self.extend = {}
-          (_ktype74, _vtype75, _size73 ) = iprot.readMapBegin()
-          for _i77 in xrange(_size73):
-            _key78 = iprot.readString();
-            _val79 = iprot.readString();
-            self.extend[_key78] = _val79
+          (_ktype88, _vtype89, _size87 ) = iprot.readMapBegin()
+          for _i91 in xrange(_size87):
+            _key92 = iprot.readString();
+            _val93 = iprot.readString();
+            self.extend[_key92] = _val93
           iprot.readMapEnd()
         else:
           iprot.skip(ftype)
@@ -2868,8 +2910,8 @@
     if self.videos is not None:
       oprot.writeFieldBegin('videos', TType.LIST, 58)
       oprot.writeListBegin(TType.STRUCT, len(self.videos))
-      for iter80 in self.videos:
-        iter80.write(oprot)
+      for iter94 in self.videos:
+        iter94.write(oprot)
       oprot.writeListEnd()
       oprot.writeFieldEnd()
     if self.play_stream is not None:
@@ -2883,9 +2925,9 @@
     if self.extend is not None:
       oprot.writeFieldBegin('extend', TType.MAP, 61)
       oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.extend))
-      for kiter81,viter82 in self.extend.items():
-        oprot.writeString(kiter81)
-        oprot.writeString(viter82)
+      for kiter95,viter96 in self.extend.items():
+        oprot.writeString(kiter95)
+        oprot.writeString(viter96)
       oprot.writeMapEnd()
       oprot.writeFieldEnd()
     if self.now_episode is not None:
Index: crawl/ttypes.py
===================================================================
--- crawl/ttypes.py	(revision 122471)
+++ crawl/ttypes.py	(working copy)
@@ -2257,3 +2257,147 @@
 
   def __ne__(self, other):
     return not (self == other)
+
+class CategoryProportion:
+  """
+  Attributes:
+   - category
+   - proportion
+  """
+
+  thrift_spec = (
+    None, # 0
+    (1, TType.STRING, 'category', None, None, ), # 1
+    (2, TType.DOUBLE, 'proportion', None, None, ), # 2
+  )
+
+  def __init__(self, category=None, proportion=None,):
+    self.category = category
+    self.proportion = proportion
+
+  def read(self, iprot):
+    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
+      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
+      return
+    iprot.readStructBegin()
+    while True:
+      (fname, ftype, fid) = iprot.readFieldBegin()
+      if ftype == TType.STOP:
+        break
+      if fid == 1:
+        if ftype == TType.STRING:
+          self.category = iprot.readString();
+        else:
+          iprot.skip(ftype)
+      elif fid == 2:
+        if ftype == TType.DOUBLE:
+          self.proportion = iprot.readDouble();
+        else:
+          iprot.skip(ftype)
+      else:
+        iprot.skip(ftype)
+      iprot.readFieldEnd()
+    iprot.readStructEnd()
+
+  def write(self, oprot):
+    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
+      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
+      return
+    oprot.writeStructBegin('CategoryProportion')
+    if self.category is not None:
+      oprot.writeFieldBegin('category', TType.STRING, 1)
+      oprot.writeString(self.category)
+      oprot.writeFieldEnd()
+    if self.proportion is not None:
+      oprot.writeFieldBegin('proportion', TType.DOUBLE, 2)
+      oprot.writeDouble(self.proportion)
+      oprot.writeFieldEnd()
+    oprot.writeFieldStop()
+    oprot.writeStructEnd()
+
+  def validate(self):
+    return
+
+
+  def __repr__(self):
+    L = ['%s=%r' % (key, value)
+      for key, value in self.__dict__.iteritems()]
+    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))
+
+  def __eq__(self, other):
+    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__
+
+  def __ne__(self, other):
+    return not (self == other)
+
+class LanguageProportion:
+  """
+  Attributes:
+   - language_type
+   - proportion
+  """
+
+  thrift_spec = (
+    None, # 0
+    (1, TType.I32, 'language_type', None, None, ), # 1
+    (2, TType.DOUBLE, 'proportion', None, None, ), # 2
+  )
+
+  def __init__(self, language_type=None, proportion=None,):
+    self.language_type = language_type
+    self.proportion = proportion
+
+  def read(self, iprot):
+    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
+      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
+      return
+    iprot.readStructBegin()
+    while True:
+      (fname, ftype, fid) = iprot.readFieldBegin()
+      if ftype == TType.STOP:
+        break
+      if fid == 1:
+        if ftype == TType.I32:
+          self.language_type = iprot.readI32();
+        else:
+          iprot.skip(ftype)
+      elif fid == 2:
+        if ftype == TType.DOUBLE:
+          self.proportion = iprot.readDouble();
+        else:
+          iprot.skip(ftype)
+      else:
+        iprot.skip(ftype)
+      iprot.readFieldEnd()
+    iprot.readStructEnd()
+
+  def write(self, oprot):
+    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
+      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
+      return
+    oprot.writeStructBegin('LanguageProportion')
+    if self.language_type is not None:
+      oprot.writeFieldBegin('language_type', TType.I32, 1)
+      oprot.writeI32(self.language_type)
+      oprot.writeFieldEnd()
+    if self.proportion is not None:
+      oprot.writeFieldBegin('proportion', TType.DOUBLE, 2)
+      oprot.writeDouble(self.proportion)
+      oprot.writeFieldEnd()
+    oprot.writeFieldStop()
+    oprot.writeStructEnd()
+
+  def validate(self):
+    return
+
+
+  def __repr__(self):
+    L = ['%s=%r' % (key, value)
+      for key, value in self.__dict__.iteritems()]
+    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))
+
+  def __eq__(self, other):
+    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__
+
+  def __ne__(self, other):
+    return not (self == other)
